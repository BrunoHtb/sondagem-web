@page "/cadastro/edit/{id:int}"
@inject ApplicationDbContext Context
@inject NavigationManager Navigation
@rendermode InteractiveServer
@attribute [Authorize]

@if (Model is null)
{
    <p class="text-center">Carregando os Cadastros...</p>
}
else
{
    <div>
        <h1>Poço: @Model.Name (@Model.Id)</h1>
    </div>
    <div class="row g-3">
        <EditForm Model="@Model" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="row">
                <div class="col-md-4 mb-3">
                    <label class="form-label">Nome do Poço</label>
                    <InputText @bind-Value="Model.Name" class="form-control" />
                </div>

                <div class="col-md-4 mb-3">
                    <label class="form-label">Rodovia</label>
                    <InputText @bind-Value="Model.Rodovia" class="form-control" />
                </div>


            </div>

            <div class="row">
                <div class="col-md-4 mb-3">
                    <label class="form-label">KM</label>
                    <InputText @bind-Value="Model.Km" class="form-control" />
                </div>

                <div class="col-md-4 mb-3">
                    <label class="form-label">Metros</label>
                    <InputText @bind-Value="Model.Metro" class="form-control" />
                </div>
            </div>

            <div class="row">
                <div class="col-md-4 mb-3">
                    <label class="form-label">Trecho</label>
                    <InputText @bind-Value="Model.Trecho" class="form-control" />
                </div>


                <div class="col-md-4 mb-3">
                    <label class="form-label">Lote</label>
                    <InputSelect @bind-Value="Model.Lote" class="form-select">
                        @foreach (var lot in Lots)
                        {
                            <option value="@lot.Name" selected="@(lot.Name == Model.Lote)">@lot.Name</option>
                        }
                    </InputSelect>
                </div>
            </div>

            <div class="row">
                <div class="col-md-4 mb-3">
                    <label class="form-label">Regional</label>
                    <InputSelect @bind-Value="Model.Regional" class="form-select">
                        @foreach (var regional in Regional)
                        {
                            <option value="@regional.Name" selected="@(regional.Name == Model.Regional)">@regional.Name</option>
                        }
                    </InputSelect>
                </div>
            
                <div class="col-md-4 mb-3">
                    <label class="form-label">Area</label>
                    <InputText @bind-Value="Model.Area" class="form-control" />
                </div>
            </div>

            @for(int i=0; i<Camadas.Count; i++)
            {
                <div class="row">
                    <div class="col-md-4 mb-3">
                        <label class="form-label">Camada @(i+1)</label>
                        <InputText @bind-Value="Camadas[i]" class="form-control" />
                    </div>

                    <div class="col-md-4 mb-3">
                        <label class="form-label">Espessura @(i+1)</label>
                        <InputText @bind-Value="Espessuras[i]" class="form-control" />
                    </div>
                </div>
            }

            <div class="row">
                <div class="col-md-4 mb-3">
                    <label class="form-label">Status</label>
                    <InputText @bind-Value="Model.Status" class="form-control" />
                </div>

                <div class="col-md-4 mb-3">
                    <label class="form-label">Observação</label>
                    <InputTextArea @bind-Value="Model.Observacao" class="form-control" />
                </div>
            </div>


            <button type="submit" class="btn btn-primary">Atualizar</button>
            <a href="/cadastro">Cancelar</a>
        </EditForm>
    </div>
}

@code {

    [Parameter]
    public int Id { get; set; } 
    public Register? Model {get; set; } = new();
    public IEnumerable<Lot> Lots { get; set; } = Enumerable.Empty<Lot>();
    public IEnumerable<Regional> Regional { get; set; } = Enumerable.Empty<Regional>();
    public List<string> Camadas { get; set; } = new();
    public List<string> Espessuras { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        Model = await Context.Registers.AsNoTracking().FirstOrDefaultAsync(x => x.Id == Id);
        Lots = await Context.Lots.AsNoTracking().OrderBy(x => x.Name).ToListAsync();
        Regional = await Context.Regionals.AsNoTracking().OrderBy(x => x.Name).ToListAsync();
        Camadas = Model?.Camadas?.Split(';').ToList() ?? new List<string>();
        Espessuras = Model?.Espessuras?.Split(';').ToList() ?? new List<string>();
    }

    public async Task OnValidSubmit()
    {
        Context.Registers.Update(Model);
        await Context.SaveChangesAsync();

        Navigation.NavigateTo("cadastro");
    }
}
