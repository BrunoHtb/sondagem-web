<div>
    @if (isLoading)
    {
        <p>Carregando fotos...</p>
    }
    else if (photoUrls.Any())
    {
        <div id="photoCarousel" class="carousel slide" data-bs-ride="carousel">
            <div class="carousel-inner">
                @for (int i = 0; i < photoUrls.Count; i++)
                {
                    <div class="carousel-item @(i == selectedIndex ? "active" : "")">
                        <a href="@photoUrls[i]" target="_blank">
                            <img src="@photoUrls[i]" class="d-block w-100" alt="Foto @(i + 1)" style="max-width: 100%; max-height: 400px;" />
                        </a>
                    </div>
                }
            </div>

            <button class="carousel-control-prev" type="button" data-dismiss="modal" @onclick="() => MoveToPrevious()">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-dismiss="modal" @onclick="() => MoveToNext()">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>
    }
    else
    {
        <p>Nenhuma foto disponível.</p>
    }
</div>

@code {
    [Parameter]
    public string NomeFotos { get; set; }
    [Parameter]
    public string NomeDiretorio { get; set; }
    private List<string> photoUrls = new List<string>();
    public bool isLoading = true;
    int selectedIndex = 0;

    protected override async Task OnInitializedAsync()
    {
        photoUrls = await LoadPhotosFromFtpAsync();
        isLoading = false;
    }

    private async Task<List<string>> LoadPhotosFromFtpAsync()
    {
        return await FtpConnection();
    }

    private async Task<List<string>> FtpConnection()
    {
        using (var ftp = new FtpClient("177.220.159.198", "Esteio1", "Reynaldo1151!@#"))
        {
            ftp.Connect();
            foreach (var fileInfo in ftp.GetListing($"/sondagem/{NomeDiretorio}"))
            {
                Console.WriteLine(fileInfo);
                if (fileInfo.Type == FtpObjectType.File)
                {
                    var extension = Path.GetExtension(fileInfo.Name).ToLowerInvariant();
                    if (extension == ".jpg" || extension == ".png" || extension == ".jpeg")
                    {
                        using(var stream = ftp.OpenRead(fileInfo.FullName))
                        {
                            using (var memoryStream = new MemoryStream())
                            {
                                await stream.CopyToAsync(memoryStream);
                                var base64String = Convert.ToBase64String(memoryStream.ToArray());

                                photoUrls.Add($"data:image/{extension.Substring(1)};base64,{base64String}");
                            }
                        }
                    }
                }
            }
        }
        return photoUrls;
    }

    private void MoveToPrevious()
    {
        if (selectedIndex > 0)
        {
            selectedIndex--;
        }
        else
        {
            selectedIndex = photoUrls.Count - 1;
        }
    }

    private void MoveToNext()
    {
        if (selectedIndex < photoUrls.Count - 1)
        {
            selectedIndex++;
        }
        else
        {
            selectedIndex = 0;
        }
    }
}
